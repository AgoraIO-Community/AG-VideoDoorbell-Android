<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.agora.agoracallkit">
    <!-- 允许程序改变网络连接状态 -->
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
    <!-- 从扩展存储读取权限 -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <!-- 允许应用程序改变任务的z顺序 -->
    <uses-permission android:name="android.permission.REORDER_TASKS" />
    <uses-permission android:name="com.android.launcher.permission.READ_SETTINGS" />
    <!-- 允许程序收到广播后快速收到下一个广播 -->
    <uses-permission android:name="android.permission.BROADCAST_STICKY" />
    <!-- 忽略电池优化权限 -->
    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" />
    <!-- 29以后程序需要使用全屏通知 -->
    <uses-permission android:name="android.permission.USE_FULL_SCREEN_INTENT" />

    <uses-permission android:name="android.permission.REORDER_TASKS" />
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />


    <!-- IM SDK required start -->
    <!-- 允许程序振动 -->
    <uses-permission android:name="android.permission.VIBRATE" />
    <!-- 访问网络权限 -->
    <uses-permission android:name="android.permission.INTERNET" />
    <!-- 获取运营商信息，用于支持提供运营商信息相关的接口-->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <!-- 写入扩展存储权限-->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <!-- api 21后被标记为deprecated -->
    <uses-permission android:name="android.permission.GET_TASKS" />
    <!-- 用于访问wifi网络信息-->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <!-- 用于获取wifi的获取权限 -->
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <!-- 允许程序在手机屏幕关闭后后台进程仍然运行 -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <!-- 允许程序开机自动运行 -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <!-- IM SDK required end -->


    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
    <uses-permission android:name="android.permission.BLUETOOTH" />


    <!-- 魅族推送配置 start-->
    <!-- 兼容 flyme5.0 以下版本，魅族内部集成 pushSDK 必填，不然无法收到消息-->
    <uses-permission android:name="com.meizu.flyme.push.permission.RECEIVE" />
    <permission
        android:name="com.agora.agoracalldemo.push.permission.MESSAGE"
        android:protectionLevel="signature" />
    <uses-permission android:name="com.agora.agoracalldemo.push.permission.MESSAGE" />
    <!-- 兼容 flyme3.0 配置权限-->
    <uses-permission android:name="com.meizu.c2dm.permission.RECEIVE" />
    <permission
        android:name="com.agora.agoracalldemo.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />
    <uses-permission android:name="com.agora.agoracalldemo.permission.C2D_MESSAGE" />
    <!-- 魅族推送配置 end-->

    <!-- Oppo推送配置（如果应用无透传权限，则不用配置） start -->
    <uses-permission android:name="com.coloros.mcs.permission.RECIEVE_MCS_MESSAGE" />
    <uses-permission android:name="com.heytap.mcs.permission.RECIEVE_MCS_MESSAGE" />
    <!-- Oppo推送配置 end -->

    <!-- Mi推送配置 start -->
    <permission
        android:name="com.agora.agoracalldemo.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature" />
    <uses-permission android:name="com.agora.agoracalldemo.permission.MIPUSH_RECEIVE" />
    <!-- Mi推送配置 end -->

    <application
        android:allowBackup="true"
        android:supportsRtl="true">

        <!-- 设置环信应用的AppKey -->
        <meta-data
            android:name="EASEMOB_APPKEY"
            android:value="@string/EASEMOB_APPKEY" />

        <!-- 设置声网应用的AppID -->
        <meta-data
            android:name="AGORA_APPID"
            android:value="@string/AGORA_APPID" />

        <!-- 业务服务地址 -->
        <meta-data
            android:name="AGORA_SERVER_URL"
            android:value="@string/AGORA_SERVER_URL" />
        <meta-data
            android:name="CUSTOM_SERVER_URL"
            android:value="@string/CUSTOM_SERVER_URL" />
        <meta-data
            android:name="BINDING_SERVER_URL"
            android:value="@string/BINDING_SERVER_URL" />

        <!-- 离线消息通知 -->
        <meta-data
            android:name="EASE_NOTIFIER_NOTIFY_ID"
            android:value="@integer/EASE_NOTIFIER_MSG_ID" />
        <meta-data
            android:name="EASE_NOTIFIER_CHANNEL_ID"
            android:value="@string/EASE_NOTIFIER_CHANNEL_ID" />

        <!-- FCM required start -->
        <meta-data
            android:name="com.fcm.push.enable"
            android:value="@bool/FCM_ENBALE" />
        <meta-data
            android:name="com.fcm.push.senderid"
            android:value="@string/FCM_SENDERID" />

        <service
            android:name="com.agora.agoracallkit.fcm.EMFCMMSGService"
            android:exported="true">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service
            android:name="com.agora.agoracallkit.fcm.EMFCMTokenRefreshService"
            android:exported="true">
            <intent-filter>
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>
        <!-- FCM required end -->

        <!--华为 HMS Config-->
        <meta-data
            android:name="com.huawei.hms.client.appid"
            android:value="@string/HUAWEI_PUSH_APPKID" />
        <meta-data
            android:name="push_kit_auto_init_enabled"
            android:value="true" />      <!-- 启用自动初始化，4.0后开启不再需要显示调用getToken -->
        <service
            android:name="com.agora.agoracallkit.service.HMSPushService"
            android:exported="false">   <!-- 设置为false，限制其他应用的组件唤醒该service -->
            <intent-filter>
                <action android:name="com.huawei.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <!-- huawei push end -->

        <!-- VIVO推送配置 start -->
        <meta-data
            android:name="com.vivo.push.api_key"
            android:value="@string/VIVO_PUSH_APPKEY" />
        <meta-data
            android:name="com.vivo.push.app_id"
            android:value="@integer/VIVO_PUSH_APPID" />

        <service
            android:name="com.vivo.push.sdk.service.CommandClientService"
            android:exported="true" />
        <activity
            android:name="com.vivo.push.sdk.LinkProxyClientActivity"
            android:exported="false"
            android:screenOrientation="portrait"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <receiver
            android:name="com.hyphenate.push.platform.vivo.EMVivoMsgReceiver"
            android:exported="true">
            <intent-filter>
                <!-- 接收 push 消息 -->
                <action android:name="com.vivo.pushclient.action.RECEIVE" />
            </intent-filter>
        </receiver>
        <!-- VIVO推送配置 end -->

        <!-- MEIZU推送配置 start -->
        <meta-data
            android:name="com.meizu.push.api_key"
            android:value="@string/MEIZU_PUSH_APPKEY" />
        <meta-data
            android:name="com.meizu.push.app_id"
            android:value="@string/MEIZU_PUSH_APPID" />

        <receiver
            android:name="com.hyphenate.push.platform.meizu.EMMzMsgReceiver"
            android:exported="true">
            <intent-filter>
                <!-- 接收 push 消息 -->
                <action android:name="com.meizu.flyme.push.intent.MESSAGE" />
                <!-- 接收 register 消息 -->
                <action android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK" />
                <!-- 接收 unregister 消息-->
                <action android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK" />
                <!-- 兼容低版本 Flyme3 推送服务配置 -->
                <action android:name="com.meizu.c2dm.intent.REGISTRATION" />
                <action android:name="com.meizu.c2dm.intent.RECEIVE" />

                <category android:name="com.agora.agoracalldemo" />
            </intent-filter>
        </receiver>
        <!-- MEIZU推送配置 end -->

        <!-- Oppo推送配置 start -->
        <meta-data
            android:name="com.oppo.push.api_key"
            android:value="@string/OPPO_PUSH_APPKEY" />
        <meta-data
            android:name="com.oppo.push.app_secret"
            android:value="@string/OPPO_PUSH_APPSECRET" />

        <service
            android:name="com.heytap.msp.push.service.CompatibleDataMessageCallbackService"
            android:exported="true"
            android:permission="com.coloros.mcs.permission.SEND_MCS_MESSAGE">
            <intent-filter>
                <action android:name="com.coloros.mcs.action.RECEIVE_MCS_MESSAGE" />
            </intent-filter>
        </service> <!--兼容Q以下版本-->
        <service
            android:name="com.heytap.msp.push.service.DataMessageCallbackService"
            android:exported="true"
            android:permission="com.heytap.mcs.permission.SEND_PUSH_MESSAGE">
            <intent-filter>
                <action android:name="com.heytap.mcs.action.RECEIVE_MCS_MESSAGE" />
                <action android:name="com.heytap.msp.push.RECEIVE_MCS_MESSAGE" />
            </intent-filter>
        </service> <!--兼容Q版本-->
        <!-- Oppo推送配置 end -->

        <!-- Mi推送配置 start -->
        <meta-data
            android:name="com.mi.push.api_key"
            android:value="@string/MI_PUSH_APPKEY" />
        <meta-data
            android:name="com.mi.push.app_id"
            android:value="@string/MI_PUSH_APPID" />

        <service
            android:name="com.xiaomi.push.service.XMPushService"
            android:enabled="true"
            android:process=":pushservice" />
        <service
            android:name="com.xiaomi.push.service.XMJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":pushservice" /> <!--注：此service必须在3.0.1版本以后（包括3.0.1版本）加入-->
        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true" /> <!--注：此service必须在2.2.5版本以后（包括2.2.5版本）加入-->
        <receiver
            android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.xiaomi.push.service.receivers.PingReceiver"
            android:exported="false"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.xiaomi.push.PING_TIMER" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.hyphenate.push.platform.mi.EMMiMsgReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR" />
            </intent-filter>
        </receiver>
        <!-- Mi推送配置 end-->
    </application>

    <!-- targetSdkVersion是30或者更高版本时，需要添加<queries>标签，使应用可以访问HMS Core（APK） -->
    <queries>
        <intent>
            <action android:name="com.huawei.hms.core.aidlservice" />
        </intent>
    </queries>
    <!-- HMS Core（APK）访问配置 end-->

</manifest>